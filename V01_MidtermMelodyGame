/*
 * Midterm Game: SoundSoup
 * Lee Saynor
 * DIGF 2B03 Physical Computing
 * OCAD University
 * Created on Feb 9, 2014
 *
 * Based on:
 * "9.4 Generating Audio Tones and Fading an LED," Arduino Cookbook by Michael Margolis
 * "Play Melody" Tutorial by D. Cuartielles
 *
 * See Arduino Cookbook 5.2 for internal pull-up resistors. 
 */
 
#include "pitches.h"
 
byte speakerPin = 8;
byte ledPins[] = {5, 6, 9, 10};    // LED array
 
const int p1Button = 12; 

//int melody[] = {}
//int dur[]    = {}

int brightness = 0;
int increment = 1;

void setup() {
  pinMode(speakerPin, OUTPUT);
  pinMode(p1Button, INPUT);      // Declare pushbutton as input
  // pins driven by analogWrite do not need to be declared as outputs
}

void playFrequency(int frequency, int duration) {
  // Period is one cycle of tone
  // Period is equal to 1 divided by frequency
  // Duration is how long the pulsing sound should last in milliseconds
  int period = 1000000L / frequency;
  int pulse = period / 2;
  for (long i = 0; i < duration * 1000L; i += period) {
    digitalWrite(speakerPin, HIGH);
    delayMicroseconds(pulse);
    digitalWrite(speakerPin, LOW);
    delayMicroseconds(pulse);
  }
}

void fadeLED(){
  for (int brightness = 0; brightness < 255; brightness++) {
    for (int p = 0; p < 4; p++) {
      analogWrite(ledPins[p], brightness);
    }
    delay(2);
  }
  for (int brightness = 255; brightness >= 0; brightness--) {
    for (int p = 0; p < 4; p++) {
      analogWrite(ledPins[p], brightness);
    }
    delay(2);
  }
}

void loop() {
  // A note with period of 15289 is deep C (second lowest C note on piano)
  int val = digitalRead(p1Button);    // Read input value
  if (val == HIGH) {
    //for (int period = 15289; period >= 477; period = period / 2) {    // Play 6 octaves
    //  playTone(period, 500);  // Play tone for 200 milliseconds
    //}
    playFrequency(NOTE_C5, 500);
    playFrequency(NOTE_B4, 500);
    playFrequency(NOTE_G4, 500);
    playFrequency(NOTE_C5, 250);
    playFrequency(NOTE_B4, 250);
    playFrequency(NOTE_E4, 500);
    delay(1000);
    //playFrequency(NOTE_B0, 1000);
    playFrequency(NOTE_C5, 500);
    playFrequency(NOTE_C4, 500);
    playFrequency(NOTE_G4, 500);
    playFrequency(NOTE_A4, 250);
    playFrequency(NOTE_C5, 250);
  } else {
    fadeLED();
  }
}




/*************************************************
 * Public Constants
 *************************************************/

#define NOTE_B0  31
#define NOTE_C1  33
#define NOTE_CS1 35
#define NOTE_D1  37
#define NOTE_DS1 39
#define NOTE_E1  41
#define NOTE_F1  44
#define NOTE_FS1 46
#define NOTE_G1  49
#define NOTE_GS1 52
#define NOTE_A1  55
#define NOTE_AS1 58
#define NOTE_B1  62
#define NOTE_C2  65
#define NOTE_CS2 69
#define NOTE_D2  73
#define NOTE_DS2 78
#define NOTE_E2  82
#define NOTE_F2  87
#define NOTE_FS2 93
#define NOTE_G2  98
#define NOTE_GS2 104
#define NOTE_A2  110
#define NOTE_AS2 117
#define NOTE_B2  123
#define NOTE_C3  131
#define NOTE_CS3 139
#define NOTE_D3  147
#define NOTE_DS3 156
#define NOTE_E3  165
#define NOTE_F3  175
#define NOTE_FS3 185
#define NOTE_G3  196
#define NOTE_GS3 208
#define NOTE_A3  220
#define NOTE_AS3 233
#define NOTE_B3  247
#define NOTE_C4  262
#define NOTE_CS4 277
#define NOTE_D4  294
#define NOTE_DS4 311
#define NOTE_E4  330
#define NOTE_F4  349
#define NOTE_FS4 370
#define NOTE_G4  392
#define NOTE_GS4 415
#define NOTE_A4  440
#define NOTE_AS4 466
#define NOTE_B4  494
#define NOTE_C5  523
#define NOTE_CS5 554
#define NOTE_D5  587
#define NOTE_DS5 622
#define NOTE_E5  659
#define NOTE_F5  698
#define NOTE_FS5 740
#define NOTE_G5  784
#define NOTE_GS5 831
#define NOTE_A5  880
#define NOTE_AS5 932
#define NOTE_B5  988
#define NOTE_C6  1047
#define NOTE_CS6 1109
#define NOTE_D6  1175
#define NOTE_DS6 1245
#define NOTE_E6  1319
#define NOTE_F6  1397
#define NOTE_FS6 1480
#define NOTE_G6  1568
#define NOTE_GS6 1661
#define NOTE_A6  1760
#define NOTE_AS6 1865
#define NOTE_B6  1976
#define NOTE_C7  2093
#define NOTE_CS7 2217
#define NOTE_D7  2349
#define NOTE_DS7 2489
#define NOTE_E7  2637
#define NOTE_F7  2794
#define NOTE_FS7 2960
#define NOTE_G7  3136
#define NOTE_GS7 3322
#define NOTE_A7  3520
#define NOTE_AS7 3729
#define NOTE_B7  3951
#define NOTE_C8  4186
#define NOTE_CS8 4435
#define NOTE_D8  4699
#define NOTE_DS8 4978
